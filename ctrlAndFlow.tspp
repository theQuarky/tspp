// // TSPP Control Flow and Statements Example

function main(): void {
    // Basic variable declarations for our examples
    let counter: int = 0;
    let max: int = 10;
    let text: string = "Hello";

    // // 1. Block Statement
    {
        let x: int = 5;
        let y: int = x * 2;
    }

    // // // 2. If Statement
    if (counter < max) {
        counter = counter + 1;
    } else if (counter == max) {
        counter = 0;
    } else {
        counter = -1;
    }

    // 3. Switch Statement
    switch (counter) {
        case 0:
            text = "Zero";
            break;
        case 1:
            text = "One";
            break;
        case 2:
            text = "Two";
            // Fall through
        case 3:
            counter = counter + 1;
            break;
        default:
            text = "Many";
    }

    // 4. While Loop
    while (counter < max) {
        counter = counter + 1;
        if (counter == 5) {
            continue;  // Skip the rest for 5
        }
        text = text + counter;
    }

    // 5. Do-While Loop
    do {
        counter = counter - 1;
        if (counter < 0) {
            break;  // Exit if negative
        }
    } while (counter > 0);

    // 6. For Loop
    for (let i = 0; i < max; i++) {
        if (i % 2 == 0) {
            continue;  // Skip even numbers
        }
        text = text;
    }



    // 8. Try-Catch-Finally
    try {
        let result: int = 10 / 7;
        text = result;
    } catch (e: Error) {
        text = "Error: Division by zero";
    } finally {
        counter = 0;  // Reset counter
    }

    // 9. Jump Statements
    function processNumbers(nums: int[]): int {
        let sum: int = 0;

        // Return statement
        if (nums.length == 0) {
            return 0;
        }

        // Break with label
        outerLoop: while (true) {
            for (let num of nums) {
                if (num < 0) {
                    break outerLoop;
                }
                sum = sum + num;
            }
        }

        // Continue with label
        outerLoop: for (let i = 0; i < nums.length; i = i + 1) {
            innerLoop: for (let j = 0; j < nums.length; j = j + 1) {
                if (i == j) {
                    continue outerLoop;
                }
            }
        }

        // Throw statement
        if (sum > 1000) {
            throw new Error("Sum too large");
        }

        return sum;
    }

    #asm("nop");
}

// // Helper function for division
function divide(a: int, b: int): int {
    if (b == 0) {
        let location = new Location(45, 54);
        throw new Error("Division by zero", location);
    }
    return a / b;
}